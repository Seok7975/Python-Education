'''
format() 함수 사용하기
    : 문자열 포매팅(String formatting)은 서식문자보다 좀 더 간편하게
    문자열을 표현할 수 있다. {}(중괄호) 안에 포매팅을 지정하고 
    format() 함수로 값을 삽입한다. 
'''

# 문자열을 직접 대입. 여기서는 인덱스 0을 사용한다. 
str1 = 'name : {0}'.format('홍길동')
print(str1)

# 변수명을 통한 대입 
age = 55
str2 = 'age = {0}'.format(age)
print(str2)

# 매개변수에 변수명을 부여하여 대입한다. 
str3 = 'name : {name}, age : {age}'.format(name = '홍길동', age = 33)
print(str3)

# 인덱스나 변수명이 없으면 순서대로 매칭된다.
str4 = '이름 : {}, 나이 : {}'.format('이순신', 44)
print(str4)

# 인덱스를 이용하면 출력순서를 변경할 수 있다. 
str5 = '나이 : {1}, 이름 : {0}'.format('이순신', 44)
print(str5)

# 인덱스를 통해 중복해서 출력할 수 있다. 
str6 = '항목1 : {0}, 항목2 : {1}, 항목3 : {0}'.format('서울', '부산')
print(str6)

'''
정수를 N자리로 표현한다. {인덱스:자리수 및 서식문자}
    {0:03d} => 0번 인덱스의 숫자를 3자리로 표현한다.
    만약 자리수를 초과하는 경우라면 그대로 출력하고, 모자라는
    경우에는 0으로 채운다. 
    12345의 경우 3자리를 초과하므로 그대로 출력된다. 
    12의 경우 자리수에 모자라므로 0을 채워서 012로 출력된다. 
'''
str7 = '정수3자리 : {0:03d}, {1:03d}'.format(12345, 12)
print(str7)

# 드문 경우이긴 하나 {} 자체를 출력해야 할때는 중괄호를 겹쳐서 
# 기술한다. 
str9 = '{{ {0} }}'.format('python 중괄호 표현')
print("str9=", str9)

# 세자리마다 콤마를 찍을때 사용한다. 
str10 = 1592000
print(format(str10, ','))